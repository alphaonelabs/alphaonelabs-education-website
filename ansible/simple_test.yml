---
- hosts: production
  become: yes
  vars:
    project_name: "{{ lookup('env', 'PROJECT_NAME') | default('education-website', true) }}"
    vps_user: "{{ lookup('env', 'VPS_USER') | default('ubuntu', true) }}"
    domain_name: "{{ lookup('env', 'DOMAIN_NAME') | default('', true) }}"
    app_port: "{{ lookup('env', 'APP_PORT') | default('8000', true) }}"

  tasks:
    - name: Copy test script (if it exists)
      copy:
        src: ../test_db.py
        dest: "/root/{{ project_name }}/test_db.py"
        owner: "{{ vps_user }}"
        group: "{{ vps_user }}"
        mode: '0755'
      ignore_errors: yes

    - name: Run database test (if test script exists)
      shell: |
        source venv/bin/activate
        python test_db.py
      args:
        chdir: "/root/{{ project_name }}"
        executable: /bin/bash
      become_user: "{{ vps_user }}"
      register: db_test
      ignore_errors: yes

    - name: Display test results
      debug:
        var: db_test.stdout_lines
      when: db_test.stdout_lines is defined

    - name: Test Django shell basic connection
      shell: |
        source venv/bin/activate
        python manage.py shell -c "
        from django.db import connection;
        print('Database connection successful');
        print(f'Database name: {connection.settings_dict[\"NAME\"]}');
        "
      args:
        chdir: "/root/{{ project_name }}"
        executable: /bin/bash
      become_user: "{{ vps_user }}"
      register: django_test

    - name: Display Django test results
      debug:
        var: django_test.stdout_lines

    - name: Test website response via domain
      uri:
        url: "{% if domain_name %}https://{{ domain_name }}{% else %}http://localhost{% endif %}"
        method: GET
        status_code: 200
      register: website_test
      ignore_errors: yes
      when: domain_name

    - name: Test website response via localhost
      uri:
        url: "http://localhost:{{ app_port }}"
        method: GET
        status_code: 200
      register: localhost_test
      ignore_errors: yes

    - name: Display website status
      debug:
        msg: "Website status (domain): {{ website_test.status if website_test.status is defined else 'Not tested' }}"
      when: domain_name

    - name: Display localhost status
      debug:
        msg: "Website status (localhost): {{ localhost_test.status if localhost_test.status is defined else 'Failed' }}"
