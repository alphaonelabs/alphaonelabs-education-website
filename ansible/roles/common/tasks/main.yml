---
- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600
  become: yes
  tags: common

- name: Install system packages
  apt:
    name: "{{ system_packages }}"
    state: present
  become: yes
  tags: common

- name: Create project user if not exists
  user:
    name: "{{ project_user }}"
    shell: /bin/bash
    create_home: yes
    state: present
  become: yes
  when: project_user != ansible_user
  tags: common

- name: Create project directory
  file:
    path: "{{ project_path }}"
    state: directory
    owner: "{{ project_user }}"
    group: "{{ project_user }}"
    mode: '0755'
  become: yes
  tags: common

- name: Create backup directory
  file:
    path: "{{ backup_path }}"
    state: directory
    owner: "{{ project_user }}"
    group: "{{ project_user }}"
    mode: '0755'
  become: yes
  tags: common

- name: Create webhook directory
  file:
    path: "{{ webhook_path }}"
    state: directory
    owner: "{{ project_user }}"
    group: "{{ project_user }}"
    mode: '0755'
  become: yes
  tags: common

- name: Create log directory
  file:
    path: "{{ log_path }}"
    state: directory
    owner: "{{ project_user }}"
    group: "{{ project_user }}"
    mode: '0755'
  become: yes
  tags: common

- name: Set timezone
  timezone:
    name: UTC
  become: yes
  tags: common

- name: Configure system limits
  pam_limits:
    domain: "{{ project_user }}"
    limit_type: "{{ item.type }}"
    limit_item: "{{ item.item }}"
    value: "{{ item.value }}"
  become: yes
  loop:
    - { type: 'soft', item: 'nofile', value: '65536' }
    - { type: 'hard', item: 'nofile', value: '65536' }
  tags: common

- name: Add project user to sudo group
  user:
    name: "{{ project_user }}"
    groups: sudo
    append: yes
  when: project_user != "root"

- name: Update system packages
  apt:
    update_cache: yes
    upgrade: dist
    autoremove: yes
    autoclean: yes
  when: ansible_os_family == "Debian"

- name: Install essential system packages
  apt:
    name:
      - build-essential
      - curl
      - wget
      - git
      - unzip
      - vim
      - htop
      - tree
      - jq
      - rsync
      - fail2ban
      - ufw
      - supervisor
      - logrotate
    state: present
  when: ansible_os_family == "Debian"

- name: Configure logrotate for application logs
  template:
    src: logrotate.j2
    dest: "/etc/logrotate.d/{{ project_name }}"
    mode: '0644'

- name: Create application directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ project_user }}"
    group: "{{ project_user }}"
    mode: '0755'
  loop:
    - "{{ project_path }}"
    - "{{ project_path }}/logs"
    - "{{ project_path }}/backups"
    - "/home/{{ project_user }}/webhooks" 