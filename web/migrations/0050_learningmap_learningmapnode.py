# Generated by Django 5.1.6 on 2025-03-30 17:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("web", "0049_session_latitude_session_longitude_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="LearningMap",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("slug", models.SlugField(blank=True, max_length=150, unique=True)),
                (
                    "public",
                    models.BooleanField(
                        default=False, help_text="If enabled, this map can be viewed by anyone with the link"
                    ),
                ),
                ("share_token", models.CharField(blank=True, editable=False, max_length=32, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="learning_maps",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LearningMapNode",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "node_type",
                    models.CharField(
                        choices=[
                            ("tracker", "Progress Tracker"),
                            ("course", "Course"),
                            ("milestone", "Custom Milestone"),
                        ],
                        max_length=20,
                    ),
                ),
                ("current_value", models.IntegerField(blank=True, default=0, null=True)),
                ("target_value", models.IntegerField(blank=True, null=True)),
                (
                    "color",
                    models.CharField(
                        choices=[
                            ("blue-600", "Primary"),
                            ("green-600", "Success"),
                            ("yellow-600", "Warning"),
                            ("red-600", "Danger"),
                            ("gray-600", "Secondary"),
                        ],
                        default="blue-600",
                        max_length=20,
                    ),
                ),
                ("x_position", models.IntegerField(default=0)),
                ("y_position", models.IntegerField(default=0)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "enrollment",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="web.enrollment"
                    ),
                ),
                (
                    "learning_map",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="nodes", to="web.learningmap"
                    ),
                ),
                (
                    "tracker",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="web.progresstracker"
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
    ]
