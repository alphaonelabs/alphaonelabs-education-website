# Generated by Django 5.1.6 on 2025-04-01 15:02

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("web", "0051_teamgoalmember_completion_image_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SelfCheckin",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "pre_rating",
                    models.IntegerField(
                        help_text="Confidence/understanding before session (1-5)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "post_rating",
                    models.IntegerField(
                        blank=True,
                        help_text="Confidence/understanding after session (1-5)",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="checkins", to="web.session"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="self_checkins",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("student", "session")},
            },
        ),
        migrations.CreateModel(
            name="SessionFeedback",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("rose", models.TextField(blank=True, help_text="Something that went well / they liked")),
                (
                    "bud",
                    models.TextField(
                        blank=True, help_text="Something they want to learn more about or that has potential"
                    ),
                ),
                (
                    "thorn",
                    models.TextField(blank=True, help_text="Something that was difficult, confusing, or frustrating"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="feedback", to="web.session"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="session_feedback",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("student", "session")},
            },
        ),
        migrations.CreateModel(
            name="SessionSurvey",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "content_rating",
                    models.IntegerField(
                        help_text="How beneficial was the session content (1-5)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "teaching_rating",
                    models.IntegerField(
                        help_text="How effective was the teaching/presentation (1-5)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "pace_rating",
                    models.IntegerField(
                        help_text="Was the pace appropriate (1-5)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "materials_rating",
                    models.IntegerField(
                        help_text="How useful were the materials (1-5)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("comments", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="surveys", to="web.session"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="session_surveys",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("student", "session")},
            },
        ),
    ]
