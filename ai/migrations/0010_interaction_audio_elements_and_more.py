# Generated by Django 5.1.6 on 2025-03-29 12:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ai', '0009_studyplan_completed_hours'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='interaction',
            name='audio_elements',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='interaction',
            name='comprehension_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='interaction',
            name='difficulty_level',
            field=models.CharField(choices=[('easy', 'Easy'), ('moderate', 'Moderate'), ('challenging', 'Challenging')], default='moderate', max_length=20),
        ),
        migrations.AddField(
            model_name='interaction',
            name='interactive_elements',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='interaction',
            name='is_prerequisite',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='interaction',
            name='next_topics',
            field=models.ManyToManyField(blank=True, related_name='previous_topics', to='ai.interaction'),
        ),
        migrations.AddField(
            model_name='interaction',
            name='prerequisite_topics',
            field=models.ManyToManyField(blank=True, to='ai.interaction'),
        ),
        migrations.AddField(
            model_name='interaction',
            name='text_elements',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='interaction',
            name='time_spent',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='interaction',
            name='visual_elements',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='progressrecord',
            name='attempts',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='progressrecord',
            name='auditory_effectiveness',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='progressrecord',
            name='average_response_time',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='progressrecord',
            name='confidence_score',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='progressrecord',
            name='error_rate',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='progressrecord',
            name='improvement_rate',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='progressrecord',
            name='kinesthetic_effectiveness',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='progressrecord',
            name='last_activity',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='progressrecord',
            name='mastery_level',
            field=models.IntegerField(choices=[(1, 'Beginner'), (2, 'Novice'), (3, 'Intermediate'), (4, 'Advanced'), (5, 'Expert')], default=1),
        ),
        migrations.AddField(
            model_name='progressrecord',
            name='reading_effectiveness',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='progressrecord',
            name='successful_attempts',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='progressrecord',
            name='time_spent',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='progressrecord',
            name='visual_effectiveness',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='studentprofile',
            name='preferred_explanation_style',
            field=models.CharField(choices=[('practical', 'Practical Examples'), ('theoretical', 'Theoretical Concepts'), ('step-by-step', 'Step-by-Step'), ('comparative', 'Comparative Analysis')], default='practical', max_length=20),
        ),
        migrations.AddField(
            model_name='studentprofile',
            name='preferred_response_format',
            field=models.CharField(choices=[('text', 'Text'), ('visual', 'Visual'), ('interactive', 'Interactive'), ('mixed', 'Mixed')], default='mixed', max_length=20),
        ),
        migrations.AddField(
            model_name='studentprofile',
            name='preferred_response_length',
            field=models.CharField(choices=[('concise', 'Concise'), ('detailed', 'Detailed'), ('comprehensive', 'Comprehensive')], default='detailed', max_length=20),
        ),
        migrations.AlterField(
            model_name='interaction',
            name='feedback',
            field=models.IntegerField(blank=True, choices=[(1, 'Not Helpful'), (2, 'Slightly Helpful'), (3, 'Neutral'), (4, 'Helpful'), (5, 'Very Helpful')], null=True),
        ),
        migrations.AlterField(
            model_name='studentprofile',
            name='difficulty_preference',
            field=models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('adaptive', 'Adaptive')], default='intermediate', max_length=20),
        ),
        migrations.AlterField(
            model_name='studentprofile',
            name='learning_style',
            field=models.CharField(choices=[('visual', 'Visual'), ('auditory', 'Auditory'), ('reading', 'Reading/Writing'), ('kinesthetic', 'Kinesthetic'), ('mixed', 'Mixed')], default='mixed', max_length=20),
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('correct', 'Correct'), ('partially_correct', 'Partially Correct'), ('incorrect', 'Incorrect'), ('hint', 'Hint'), ('explanation', 'Explanation')], max_length=20)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('helpful', models.BooleanField(default=False)),
                ('clarity_score', models.FloatField(default=0.0)),
                ('relevance_score', models.FloatField(default=0.0)),
                ('visual_elements', models.BooleanField(default=False)),
                ('audio_elements', models.BooleanField(default=False)),
                ('text_elements', models.BooleanField(default=False)),
                ('interactive_elements', models.BooleanField(default=False)),
                ('improvement_observed', models.BooleanField(default=False)),
                ('time_to_improvement', models.DurationField(blank=True, null=True)),
                ('interaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_responses', to='ai.interaction')),
            ],
        ),
        migrations.CreateModel(
            name='LearningPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('subject', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('paused', 'Paused')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField()),
                ('target_completion_date', models.DateField()),
                ('actual_completion_date', models.DateField(blank=True, null=True)),
                ('total_topics', models.IntegerField(default=0)),
                ('completed_topics', models.IntegerField(default=0)),
                ('progress_percentage', models.FloatField(default=0.0)),
                ('preferred_learning_style', models.CharField(choices=[('visual', 'Visual'), ('auditory', 'Auditory'), ('reading', 'Reading/Writing'), ('kinesthetic', 'Kinesthetic'), ('mixed', 'Mixed')], max_length=20)),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('adaptive', 'Adaptive')], max_length=20)),
                ('average_score', models.FloatField(default=0.0)),
                ('time_spent', models.IntegerField(default=0)),
                ('completion_rate', models.FloatField(default=0.0)),
                ('current_topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai.topic')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_learning_paths', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_study_time', models.IntegerField(default=0)),
                ('total_topics_completed', models.IntegerField(default=0)),
                ('average_score', models.FloatField(default=0.0)),
                ('completion_rate', models.FloatField(default=0.0)),
                ('visual_effectiveness', models.FloatField(default=0.0)),
                ('auditory_effectiveness', models.FloatField(default=0.0)),
                ('reading_effectiveness', models.FloatField(default=0.0)),
                ('kinesthetic_effectiveness', models.FloatField(default=0.0)),
                ('current_streak', models.IntegerField(default=0)),
                ('longest_streak', models.IntegerField(default=0)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('average_response_time', models.FloatField(default=0.0)),
                ('error_rate', models.FloatField(default=0.0)),
                ('achievements_unlocked', models.IntegerField(default=0)),
                ('total_achievements', models.IntegerField(default=0)),
                ('active_paths', models.IntegerField(default=0)),
                ('completed_paths', models.IntegerField(default=0)),
                ('recent_achievements', models.ManyToManyField(related_name='recent_dashboards', to='ai.achievement')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ai_dashboard', to=settings.AUTH_USER_MODEL)),
                ('current_path', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai.learningpath')),
            ],
        ),
    ]
